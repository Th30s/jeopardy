{"version":3,"sources":["Question.js","App.js","index.js"],"names":["Question","props","useState","answer","stateNum","setStateNum","onClick","clue","console","log","App","className","questionData","questions","ReactDOM","render","document","getElementById"],"mappings":"+zCAEe,SAASA,EAASC,GAAQ,IAAD,EACTC,mBAASD,EAAME,QADN,mBAC/BC,EAD+B,KACtBC,EADsB,KAMpC,OACI,yBAAKC,QALT,WACID,EAAYD,EAAWH,EAAMM,MAC7BC,QAAQC,IAAIL,KAKR,4BAAKA,I,iBC0BFM,MA9Bf,WAGE,OACE,yBAAKC,UAAU,OACX,0CACA,yBAAKA,UAAU,SAEX,yBAAKA,UAAU,UACX,kBAACX,EAAD,CAAUG,OAAQS,EAAaC,UAAU,GAAGV,OAAQI,KAAMK,EAAaC,UAAU,GAAGN,OACpF,kBAACP,EAAD,CAAUG,OAAQS,EAAaC,UAAU,GAAGV,OAAQI,KAAMK,EAAaC,UAAU,GAAGN,OACpF,kBAACP,EAAD,CAAUG,OAAQS,EAAaC,UAAU,GAAGV,OAAQI,KAAMK,EAAaC,UAAU,GAAGN,QAGxF,yBAAKI,UAAU,UACX,kBAACX,EAAD,CAAUG,OAAQS,EAAaC,UAAU,GAAGV,OAAQI,KAAMK,EAAaC,UAAU,GAAGN,OACpF,kBAACP,EAAD,CAAUG,OAAQS,EAAaC,UAAU,GAAGV,OAAQI,KAAMK,EAAaC,UAAU,GAAGN,OACpF,kBAACP,EAAD,CAAUG,OAAQS,EAAaC,UAAU,GAAGV,OAAQI,KAAMK,EAAaC,UAAU,GAAGN,QAGxF,yBAAKI,UAAU,UACX,kBAACX,EAAD,CAAUG,OAAQS,EAAaC,UAAU,GAAGV,OAAQI,KAAMK,EAAaC,UAAU,GAAGN,OACpF,kBAACP,EAAD,CAAUG,OAAQS,EAAaC,UAAU,GAAGV,OAAQI,KAAMK,EAAaC,UAAU,GAAGN,OACpF,kBAACP,EAAD,CAAUG,OAAQS,EAAaC,UAAU,GAAGV,OAAQI,KAAMK,EAAaC,UAAU,GAAGN,WC1BpGO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a52f7fe6.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nexport default function Question(props) {\n    let [stateNum,setStateNum]=useState(props.answer);\n    function num(){\n        setStateNum(stateNum = props.clue);\n        console.log(stateNum);\n    }\n    return(\n        <div onClick={num}>\n            {/* <p>{props.clue}</p> */}\n            <h1>{stateNum}</h1>\n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport Question from './Question.js';\nimport questionData from './question-data.json';\nimport { fuchsia } from 'color-name';\n\n\nfunction App() {\n  \n\n  return (\n    <div className=\"App\">\n        <h1> Jeopardy </h1>\n        <div className=\"board\" >\n            {/* Column - 1 (HISTORY) */}\n            <div className=\"column\">\n                <Question answer={questionData.questions[0].answer} clue={questionData.questions[0].clue}/>\n                <Question answer={questionData.questions[1].answer} clue={questionData.questions[1].clue}/>\n                <Question answer={questionData.questions[2].answer} clue={questionData.questions[2].clue}/>\n            </div>\n            {/* Column - 2 (SPORTS) */}\n            <div className=\"column\">\n                <Question answer={questionData.questions[3].answer} clue={questionData.questions[3].clue}/>\n                <Question answer={questionData.questions[4].answer} clue={questionData.questions[4].clue}/>\n                <Question answer={questionData.questions[5].answer} clue={questionData.questions[5].clue}/>\n            </div>\n            {/* Column - 3 (TECH) */}\n            <div className=\"column\">\n                <Question answer={questionData.questions[6].answer} clue={questionData.questions[6].clue}/>\n                <Question answer={questionData.questions[7].answer} clue={questionData.questions[7].clue}/>\n                <Question answer={questionData.questions[8].answer} clue={questionData.questions[8].clue}/>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}